(require srfi/19)
(define (time-prime-test n)
  (newline)
  (display n)
  (start-prime-test n (current-time)))
(define (start-prime-test n start-time)
  (if (prime-number n)
      (report-prime (time-difference (current-time) start-time))))
(define (report-prime elapsed-time)
  (display " *** ")
  (display elapsed-time))
(define (smallest-divisor n)
  (find-divisor n 2))
(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        ((divides test-divisor n) test-divisor)
        (else (find-divisor n (+ 1 test-divisor)))))
(define (divides a b)
  (= (remainder b a) 0))
(define (square x)
  (* x x))
(define (prime-number n)
  (= n (smallest-divisor n)))
(define (search-for-primes start count)
  (cond ((= count 0)
         (newline)
         (display "end")
         (newline))
        ((even start) (search-for-primes (+ 1 start) count))
        ((prime-number start) 
         (time-prime-test start)
         (search-for-primes (+ 2 start) (- count 1)))
        (else (search-for-primes (+ 2 start) count))))
(define (even m)
  (= (remainder m 2) 0))

      
  
